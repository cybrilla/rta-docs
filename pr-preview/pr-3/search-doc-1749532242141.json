{"searchDocs":[{"title":"Acknowledgement","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/api/ack","content":"Acknowledgement All api calls will respond with a http 200 status code with the following json { &quot;status&quot;: &quot;ACK&quot; // can be `NACK` } ACK means the request is accepted by POA and you should expect an on_action callback. NACK means either the request validation failed or POA doesn't want to respond - you should not expect an on_action callback. Similarly, on receiving on_action callbacks from POA, you should respond with an ACK as an acknowledgement for the receipt. If you are not able to consume the callback message due to incorrect format or for any other reasons, respond with NACK status.","keywords":"","version":"Next"},{"title":"Authentication","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/api/authn","content":"Authentication Ref: https://github.com/ONDC-Official/developer-docs/blob/main/registry/signing-verification.md","keywords":"","version":"Next"},{"title":"Cybrilla POA","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/introduction","content":"Cybrilla POA POA = Point of Acceptance Think of POA as a digital branch, acting on behalf of the AMCs, to accept applications related to MF transactions. The applications are accepted from Mutual Fund Distributors (having ARN license or RIA license). To submit applications, you can integrate POA APIs directly or use any of our authorized partners - Fintech Primitives. POA APIs use ONDC MF Specifications. The APIs are asynchronous in nature, which means POA accepts the request (action call), sends an acknowledgement (ACK) and later respond back with the result of the request (on_action callback).","keywords":"","version":"Next"},{"title":"API","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/api","content":"","keywords":"","version":"Next"},{"title":"Discovery​","type":1,"pageTitle":"API","url":"/pr-preview/pr-3/docs/api#discovery","content":" You have to make a /search action call to receive the list of available fund schemes (along with allowed transaction types [eg. lumpsum, sip etc.] and their respective thresholds [eg. min investment amount, allowed frequencies etc.]) in the /on_search callback.  Sample json  { &quot;intent&quot;: { &quot;category&quot;: { &quot;descriptor&quot;: { &quot;code&quot;: &quot;MUTUAL_FUNDS&quot; } }, &quot;fulfillment&quot;: { &quot;agent&quot;: { &quot;organization&quot;: { &quot;creds&quot;: [ { &quot;id&quot;: &quot;ARN-125784&quot;, &quot;type&quot;: &quot;ARN&quot; // can be `ARN` or `RIA` } ] } } }, &quot;tags&quot;: [ { &quot;display&quot;: false, &quot;descriptor&quot;: {&quot;name&quot;: &quot;BAP Terms of Engagement&quot;, &quot;code&quot;: &quot;BAP_TERMS&quot;}, &quot;list&quot;: [ { // TODO: Is static terms mandatory? We should remove that &quot;descriptor&quot;: {&quot;name&quot;: &quot;Static Terms (Transaction Level)&quot;, &quot;code&quot;: &quot;STATIC_TERMS&quot;}, &quot;value&quot;: &quot;https://buyerapp.com/legal/ondc:fis14/static_terms?v=0.1&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Offline Contract&quot;, &quot;code&quot;: &quot;OFFLINE_CONTRACT&quot;}, &quot;value&quot;: &quot;true&quot; } ] } ] } }     ","version":"Next","tagName":"h2"},{"title":"Order Placement​","type":1,"pageTitle":"API","url":"/pr-preview/pr-3/docs/api#order-placement","content":" /select: Use this to check the readiness and prepare the investor for placing an order. Typically all selections are made here. /init: Initialize the order Input: All order details along with investor consent (2FA, IP address) Output: Order ID with Order in CREATED state /confirm: Confirm the order Input: All order details along with the Order ID Output: Order in ACCEPTED state  Detailed description and sequence diagrams: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/draft-FIS14-2.1.0/api/components/docs/stage-order.md  ","version":"Next","tagName":"h2"},{"title":"Testing in Sandbox​","type":1,"pageTitle":"API","url":"/pr-preview/pr-3/docs/api#testing-in-sandbox","content":" Orders​  To simulate a successful order scenario, place the order with amount ending in 0To simulate a failed order scenario, place the order with amount ending in 1  KYC Compliant​  To simulate a KYC compliant investor flow, use any PAN number in the format: XXXPX3751X (replace X with any alphabet)To simulate a KYC non-compliant investor flow, use any PAN number in the format: XXXPX3753X (replace X with any alphabet)  Bank account verification​  To simulate a successful verification, use bank account with number ending in 1193To simulate a failed verification, use bank account with number ending in 1515    ","version":"Next","tagName":"h3"},{"title":"Order Processing​","type":1,"pageTitle":"API","url":"/pr-preview/pr-3/docs/api#order-processing","content":" Once the order is accepted, and pre fulfillment conditions are met (eg. payment collection in case of purchase orders) POA starts the order processing. Processing states are represented in fulfillment object.  Detailed description: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/draft-FIS14-2.1.0/api/components/docs/stage-fulfillment.md ","version":"Next","tagName":"h2"},{"title":"Schema","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema","content":"Schema The json structure in every action call and on_action callback consists of various objects representing different elements of a mutual fund transaction. The following sections detail out each object.","keywords":"","version":"Next"},{"title":"Context","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/context","content":"Context Context contains an overview of the message being sent in the api call. Think of this as an equivalent to http headers. { // Currently dealing only with INDIA, so hardcode the location &quot;location&quot;: { &quot;country&quot;: { &quot;code&quot;: &quot;IND&quot; }, &quot;city&quot;: { &quot;code&quot;: &quot;*&quot; } }, // FIS14 is for investments &quot;domain&quot;: &quot;ONDC:FIS14&quot;, // Time of the request generation // RFC3339 format &quot;timestamp&quot;: &quot;2025-05-25T05:23:03.443Z&quot;, // Distributor identifier in a fully qualified domain name (FQDN) format &quot;bap_id&quot;: &quot;api.buyerapp.com&quot;, // Distributor callback URL. Should contain the domain name used in the identifier &quot;bap_uri&quot;: &quot;https://api.buyerapp.com/ondc&quot;, // POA identifier in a fully qualified domain name (FQDN) format &quot;bpp_id&quot;: &quot;api.cybrilla.com&quot;, // POA callback URL. Should contain the domain name used in the identifier &quot;bpp_uri&quot;: &quot;https://api.cybrilla.com/ondc&quot;, // A correlation id to match multiple requests in a particular user session (eg. all messages from `select` to `confirm` calls) // Buyer app should generate a new transaction id for every new user session/transaction. // UUID format &quot;transaction_id&quot;: &quot;a9aaecca-10b7-4d19-b640-b047a7c62196&quot;, // A correlation id to match the `action` call and `on_action` callback // Buyer app should generate a new message id for every `action` call it is making. POA will use the same message id for the corresponding `on_action` callback. // For unsolicited `on_action` callbacks, POA will generate a new message id everytime. // UUID format &quot;message_id&quot;: &quot;bb579fb8-cb82-4824-be12-fcbc405b6608&quot;, // Version of the protocol &quot;version&quot;: &quot;2.1.0&quot;, // The duration from `timestamp` for which this message holds valid. Buyer app can set this value during `action` calls as an expectation to receive the corresponding `on_action` callback within this duration. If the `on_action` callback comes after this duration, buyer app can either choose to accept it or reject it // POA will send a NACK if it cannot adhere to this ttl expectation // ISO8601 format &quot;ttl&quot;: &quot;PT10M&quot;, // Protocol method &quot;action&quot;: &quot;confirm&quot; } ","keywords":"","version":"Next"},{"title":"Capabilities","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/capabilities","content":"","keywords":"","version":"Next"},{"title":"Available​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-3/docs/capabilities#available","content":" ","version":"Next","tagName":"h2"},{"title":"Investor Types​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-3/docs/capabilities#investor-types","content":" Resident Indian (Individual)  ","version":"Next","tagName":"h3"},{"title":"Transaction Types​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-3/docs/capabilities#transaction-types","content":" Lumpsum PurchaseSIP (monthly, daily) Ability to register a payment mandateAbility to pay for the first instalment immediately Redemption (by units, amount, redeem all)  ","version":"Next","tagName":"h3"},{"title":"Payment Options​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-3/docs/capabilities#payment-options","content":" UPI (auth: redirect url)NACH (auth: netbanking)UPI Autopay (auth: redirect url)Netbanking  ","version":"Next","tagName":"h3"},{"title":"Roadmap​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-3/docs/capabilities#roadmap","content":" UPI and UPI Autopay with collect request flow, intent flow and qr flow (ability to you to control the payment UX)UPI Autopay: Register mandate and debit first intalment in one attempt ","version":"Next","tagName":"h2"},{"title":"Order","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/order","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Order","url":"/pr-preview/pr-3/docs/schema/order#states","content":" For order states refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/draft-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"},{"title":"Fulfillment","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/fulfillment","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Fulfillment","url":"/pr-preview/pr-3/docs/schema/fulfillment#states","content":" For state flow refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/draft-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"},{"title":"Quote","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/quote","content":"Quote Contains details about total transaction value and the breakup (eg. stamp_duty) { // ID of the quote object, set by the POA &quot;id&quot;: &quot;q1&quot;, // Represents the total money movement. // Purchase value for purchase transaction, Redemption payout for redemption transaction &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;3000&quot; }, // Contains details about stamp duty, STT etc., relevant to the transaction &quot;breakup&quot;: [ { &quot;item&quot;: { &quot;id&quot;: &quot;12391&quot;, &quot;fulfillment_ids&quot;: [&quot;ff_008&quot;] }, &quot;title&quot;: &quot;INVESTMENT&quot;, &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;2999.85&quot; } }, { &quot;item&quot;: { &quot;id&quot;: &quot;12391&quot;, &quot;fulfillment_ids&quot;: [&quot;ff_008&quot;] }, &quot;title&quot;: &quot;STAMP_DUTY&quot;, &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;0.15&quot; } } ] } ","keywords":"","version":"Next"},{"title":"Item","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/item","content":"Item Represents a scheme and a scheme plan { // ID of the scheme plan as represented in the `on_search` callback &quot;id&quot;: &quot;12391&quot;, // ID of the scheme as represented in the `on_search` callback &quot;parent_item_id&quot;: &quot;138&quot;, // Name of the scheme plan // Code represent whether this item is a `SCHEME` or a `SCHEME_PLAN` &quot;descriptor&quot;: {&quot;name&quot;: &quot;ABC Mid Cap Fund - Regular - Growth&quot;, &quot;code&quot;: &quot;SCHEME_PLAN&quot;}, // Name of the Mutual Fund &quot;creator&quot;: {&quot;descriptor&quot;: {&quot;name&quot;: &quot;ABC Mutual Fund&quot;}}, // `selected` - Represents the order amount/units chosen by the investor. // `allocated` - Represents the actual units issued (for purchases), units redeemed (for redemptions/switches) // INR represent amount, MF_UNITS represent units &quot;quantity&quot;: { &quot;selected&quot;: { &quot;measure&quot;: { &quot;value&quot;: &quot;3000&quot;, &quot;unit&quot;: &quot;INR&quot; // can be `INR`, `MF_UNITS` } }, &quot;allocated&quot;: { &quot;measure&quot;: { &quot;value&quot;: &quot;149.9925&quot;, &quot;unit&quot;: &quot;MF_UNITS&quot; // can only be `MF_UNITS` } } }, // ID of the corresponding fulfillment object &quot;fulfillment_ids&quot;: [&quot;ff_789&quot;], // ID of the corresponding payment object &quot;payment_ids&quot;: [&quot;pmt_123&quot;], // Price at which the order is processed. `listed_value` represent the NAV. `value` represent the actual price. &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;20.0000&quot;, &quot;listed_value&quot;: &quot;20.2500&quot; }, // Date on which the order is processed. &quot;time&quot;: { &quot;label&quot;: &quot;NAV Date&quot;, &quot;timestamp&quot;: &quot;2024-07-23T00:00:00+05:30&quot; }, // Represent additional details about the scheme plan &quot;tags&quot;: [ { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Information&quot;, &quot;code&quot;: &quot;PLAN_INFORMATION&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Consumer Terms &amp; Conditions&quot;, &quot;code&quot;: &quot;CONSUMER_TNC&quot;}, &quot;value&quot;: &quot;https://sellerapp.com/legal/ondc:fis14/consumer_tnc.html&quot; } ] }, { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Identifiers&quot;, &quot;code&quot;: &quot;PLAN_IDENTIFIERS&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;ISIN&quot;, &quot;code&quot;: &quot;ISIN&quot;}, &quot;value&quot;: &quot;IN123214324&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;RTA Identifier&quot;, &quot;code&quot;: &quot;RTA_IDENTIFIER&quot;}, &quot;value&quot;: &quot;02BZ&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;AMFI Identifier&quot;, &quot;code&quot;: &quot;AMFI_IDENTIFIER&quot;}, &quot;value&quot;: &quot;125487&quot; } ] }, { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Options&quot;, &quot;code&quot;: &quot;PLAN_OPTIONS&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan&quot;, &quot;code&quot;: &quot;PLAN&quot;}, &quot;value&quot;: &quot;REGULAR&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Option&quot;, &quot;code&quot;: &quot;OPTION&quot;}, &quot;value&quot;: &quot;IDCW&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;IDCW Option&quot;, &quot;code&quot;: &quot;IDCW_OPTION&quot;}, &quot;value&quot;: &quot;PAYOUT&quot; } ] } ] } ","keywords":"","version":"Next"},{"title":"Payment","type":0,"sectionRef":"#","url":"/pr-preview/pr-3/docs/schema/payment","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Payment","url":"/pr-preview/pr-3/docs/schema/payment#states","content":" For available payment methods and state flow refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/draft-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}