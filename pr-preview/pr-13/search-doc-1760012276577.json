{"searchDocs":[{"title":"Files API","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/additional-apis/files","content":"","keywords":"","version":"Next"},{"title":"Form-data parameters​","type":1,"pageTitle":"Files API","url":"/pr-preview/pr-13/docs/additional-apis/files#form-data-parameters","content":" Name\tMandatory\tType\tCommentspurpose\tyes\tstring\tPurpose of this file upload file\tyes\tfile\tFile that has to be uploaded. Supported file types are - pdf, jpeg, jpg, png The file size should not be greater than 10MB.  ","version":"Next","tagName":"h3"},{"title":"Response​","type":1,"pageTitle":"Files API","url":"/pr-preview/pr-13/docs/additional-apis/files#response","content":" { &quot;id&quot;: &quot;file_e55ddbad95120si09153a7b1eb68fc01&quot;, &quot;created_at&quot;: &quot;2025-08-05T19:48:15+0530&quot; }  ","version":"Next","tagName":"h3"},{"title":"Additional APIs","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/additional-apis","content":"Additional APIs In addition to Orders APIs that conform to ONDC protocols, Cybrilla POA also offers additional APIs for AMC partners(i.e. distributors and advisors) to deliver certain value added services. These APIs have to be authenticated separately and a separate credentials are issued for the same. API\tEnvironment\tBase URLAuthentication APIs*\tSandbox\thttps://s.finprim.com All other APIs\tSandbox\thttps://api.sandbox.cybrilla.com *The auth URLs and endpoints are temporary. This might change in future. We will keep you posted if any changes are planned","keywords":"","version":"Next"},{"title":"Authentication","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/additional-apis/authn","content":"","keywords":"","version":"Next"},{"title":"Getting Started​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#getting-started","content":" Write an email to poa.support@cybrilla.com and register yourself as OAuth 2.0 client for partner authentication purposes. At present, access to POA additional APIs is provided only to AMC partners i.e. distributors and advisors.We will share the client_id and client_secretUse partner token endpoint and provide client_id and client_secret to generate token object.Use the generated token object's access_token to access additional POA APIs.Every token object will have an expiry time. Ensure that you are creating a new token object if the existing token object is expired.  ","version":"Next","tagName":"h2"},{"title":"Getting partner token​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#getting-partner-token","content":" For partner tokens, we are using Client Credentials flow. This flow is recommended for server-side (aka confidential) client applications with no end-user, which normally describes server-to-server communication. The application needs to securely store its client ID and secret and pass them in exchange for an access token.  Sandbox partner token endpoint: POST /v2/auth/cybrillarta/token  ","version":"Next","tagName":"h2"},{"title":"Headers​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#headers","content":" Parameter\tMandatory\tDefault\tValueaccept\tyes\t-\tapplication/json content-type\tyes\t-\tapplication/x-www-form-urlencoded  ","version":"Next","tagName":"h3"},{"title":"Request Parameters​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#request-parameters","content":" Parameter\tMandatory\tDefault\tDescriptionclient_id\tyes\t-\tclient_id provided by POA client_secret\tyes\t-\tclient_secret provided by POA grant_type\tyes\t-\tMust be client_credentials  ","version":"Next","tagName":"h3"},{"title":"Sample Request​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#sample-request","content":" curl --location '{{base_url}}/{{sandbox_partner_token_endpoint}}' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --data-urlencode 'client_id=&lt;client_id&gt;' \\ --data-urlencode 'client_secret=&lt;client_secret&gt;' \\ --data-urlencode 'grant_type=client_credentials'   ","version":"Next","tagName":"h3"},{"title":"Sample Response​","type":1,"pageTitle":"Authentication","url":"/pr-preview/pr-13/docs/additional-apis/authn#sample-response","content":" { &quot;access_token&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyUVVoVl9aaGVyQmRHMjVQMl83cmdVaDYxcS1WXzZ0NzNmO&quot;, &quot;expires_in&quot;: 1800, &quot;refresh_expires_in&quot;: 0, &quot;token_type&quot;: &quot;Bearer&quot;, &quot;not-before-policy&quot;: 0, &quot;scope&quot;: &quot;partner&quot; }  ","version":"Next","tagName":"h3"},{"title":"Acknowledgement","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/api/ack","content":"Acknowledgement All api calls will respond with a http 200 status code with the following json { &quot;status&quot;: &quot;ACK&quot; // can be `NACK` } ACK means the request is accepted by POA and you should expect an on_action callback. NACK means either the request validation failed or POA doesn't want to respond - you should not expect an on_action callback. Similarly, on receiving on_action callbacks from POA, you should respond with an ACK as an acknowledgement for the receipt. If you are not able to consume the callback message due to incorrect format or for any other reasons, respond with NACK status.","keywords":"","version":"Next"},{"title":"Transaction API","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/api","content":"","keywords":"","version":"Next"},{"title":"Discovery​","type":1,"pageTitle":"Transaction API","url":"/pr-preview/pr-13/docs/api#discovery","content":" You have to make a /search action call to receive the list of available fund schemes (along with allowed transaction types [eg. lumpsum, sip etc.] and their respective thresholds [eg. min investment amount, allowed frequencies etc.]) in the /on_search callback.  Sample json  { &quot;intent&quot;: { &quot;category&quot;: { &quot;descriptor&quot;: { &quot;code&quot;: &quot;MUTUAL_FUNDS&quot; } }, &quot;fulfillment&quot;: { &quot;agent&quot;: { &quot;organization&quot;: { &quot;creds&quot;: [ { &quot;id&quot;: &quot;ARN-125784&quot;, &quot;type&quot;: &quot;ARN&quot; // can be `ARN` or `RIA` } ] } } }, &quot;tags&quot;: [ { &quot;display&quot;: false, &quot;descriptor&quot;: {&quot;name&quot;: &quot;BAP Terms of Engagement&quot;, &quot;code&quot;: &quot;BAP_TERMS&quot;}, &quot;list&quot;: [ { // TODO: Is static terms mandatory? We should remove that &quot;descriptor&quot;: {&quot;name&quot;: &quot;Static Terms (Transaction Level)&quot;, &quot;code&quot;: &quot;STATIC_TERMS&quot;}, &quot;value&quot;: &quot;https://buyerapp.com/legal/ondc:fis14/static_terms?v=0.1&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Offline Contract&quot;, &quot;code&quot;: &quot;OFFLINE_CONTRACT&quot;}, &quot;value&quot;: &quot;true&quot; } ] } ] } }     ","version":"Next","tagName":"h2"},{"title":"Order Placement​","type":1,"pageTitle":"Transaction API","url":"/pr-preview/pr-13/docs/api#order-placement","content":" /select: Use this to check the readiness and prepare the investor for placing an order. Typically all selections are made here. /init: Initialize the order Input: All order details along with investor consent (2FA, IP address) Output: Order ID with Order in CREATED state /confirm: Confirm the order Input: All order details along with the Order ID Output: Order in ACCEPTED state  Detailed description and sequence diagrams: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/release-FIS14-2.1.0/api/components/docs/stage-order.md  ","version":"Next","tagName":"h2"},{"title":"Testing in Sandbox​","type":1,"pageTitle":"Transaction API","url":"/pr-preview/pr-13/docs/api#testing-in-sandbox","content":" Orders​  To simulate a successful order scenario, place the order with amount ending in 0To simulate a failed order scenario, place the order with amount ending in 1  KYC Compliant​  To simulate a KYC compliant investor flow, use any PAN number in the format: XXXPX3751X (replace X with any alphabet)To simulate a KYC non-compliant investor flow, use any PAN number in the format: XXXPX3753X (replace X with any alphabet)  Bank account verification​  To simulate a successful verification, use bank account with number ending in 1193To simulate a failed verification, use bank account with number ending in 1515    ","version":"Next","tagName":"h3"},{"title":"Order Processing​","type":1,"pageTitle":"Transaction API","url":"/pr-preview/pr-13/docs/api#order-processing","content":" Once the order is accepted, and pre fulfillment conditions are met (eg. payment collection in case of purchase orders) POA starts the order processing. Processing states are represented in fulfillment object.  Detailed description: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/release-FIS14-2.1.0/api/components/docs/stage-fulfillment.md ","version":"Next","tagName":"h2"},{"title":"Authentication","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/api/authn","content":"Authentication Ref: https://github.com/ONDC-Official/developer-docs/blob/main/registry/signing-verification.md","keywords":"","version":"Next"},{"title":"Pre Verification API","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification","content":"","keywords":"","version":"Next"},{"title":"Workflow to verify investor's readiness to invest​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#workflow-to-verify-investors-readiness-to-invest","content":" Create a Pre Verification request using the investor's PAN number as the investor_identifier. The Pre Verification will be in accepted state which means this request has been accepted and the internally the readiness check is initiated. You can use the status attribute to check the state of Pre Verification.Check the updated status using the Fetch Pre Verification API which would take the id or Pre Verification object.If status is completed, it means there is a result available.At this stage, if readiness.status = verified, it means the investor is ready to invest. You can go ahead and accept the investments from such investors.Else if readiness.status = failed, it means the investor is not yet ready to invest. Refer to readiness.code to understand why the investor is not ready.If readiness.status = failed and readiness.code = kyc_unavailable, then it means that there is no KYC record available for this investor, at any of the KRAs. In these cases, use KYC Request feature to submit a fresh KYC application.  ","version":"Next","tagName":"h2"},{"title":"Workflow to verify investor's bank accounts​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#workflow-to-verify-investors-bank-accounts","content":" Create a Pre Verification request by providing pan, name and the list of bank_accounts that have to be verified. The Pre Verification will be in accepted state which means this request has been accepted and the internally the bank account verifications are attempted. You can use the status attribute to check the state of Pre Verification.Check the updated status using the Fetch Pre Verification API which would take the id or Pre Verification object.If status is completed, it means there is a result available.At this stage, if bank_accounts[i].status = verified, it means that particular bank account is verified and can be used to invest. You can go ahead and accept the transactions using that bank accounts.If bank_accounts[i].status = failed and bank_accounts[i].code = bank_verification_failed, it means that this particular bank account is not eligible to be used for transactional purposes. 5.1. In these cases, you can proceed with collecting another bank account from the investor and use that.If bank_accounts[i].status = failed and bank_accounts[i].code = awaiting_approval_for_manual_verification_with_proof, it means that this particular bank account is eligible for manual verification and that you need to pass the bank account proof and also the consent to manually verify the bank account. 6.1. In these cases, you can go ahead and create a new Pre Verification record by providing the bank_account_proof and set verify_manually_if_required as true6.2. In this Pre Verification result, if bank_accounts[i].status = verified, you can go ahead and accept the transactions using that particular bank account. 6.3. In this Pre Verification result, if bank_accounts[i].status = failed and bank_accounts[i].code = bank_verification_failed, it means that this particular bank account is not eligible to be used for transactional purposes.If suppose bank_accounts[i].status = failed and bank_accounts[i].code = bank_account_proof_required, it means that you have given your consent to Pre Verification to initiate a manual verification if required; but have not provided any bank_account_proof as a supporting document. In these case, provide the bank_account_proof and create a new Pre Verification recordIf suppose bank_accounts[i].status = null and bank_accounts[i].code = null, it means that the bank account verification is in progress and the results should be available soon.  ","version":"Next","tagName":"h2"},{"title":"Good practices to verify bank accounts using Pre Verification APIs​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#good-practices-to-verify-bank-accounts-using-pre-verification-apis","content":" Always attempt the bank account verifications WITHOUT giving the bank_account_proof and the consent - verify_manually_if_required as true. This is due to the reason that manual verification of bank acccount is costly and should be attempted only if Pre Verification suggests you to do it.Once Pre Verification lets you know that the particular bank account has to be manually verified, you can continue to provide the bank_account_proof and verify_manually_if_required flag as true in a new Pre Verification request so that the manual verification would be internally triggered.  ","version":"Next","tagName":"h3"},{"title":"Pre Verification Object​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#pre-verification-object","content":" { &quot;object&quot;: &quot;pre_verification&quot;, &quot;id&quot;: &quot;pv_8f6ed76d90ef43a2b4854717ac78d747&quot;, &quot;status&quot;: &quot;completed&quot;, &quot;investor_identifier&quot;: &quot;GYAPS3751D&quot;, &quot;readiness&quot;: { &quot;status&quot;: &quot;verified&quot;, &quot;code&quot;: null, &quot;reason&quot;: null }, &quot;name&quot;: { &quot;status&quot;: null, &quot;code&quot;: null, &quot;reason&quot;: null, &quot;value&quot;: &quot;Seetharam S&quot; }, &quot;pan&quot;: { &quot;status&quot;: null, &quot;code&quot;: null, &quot;reason&quot;: null, &quot;value&quot;: &quot;GYAPS3751D&quot; }, &quot;bank_accounts&quot;: [ { &quot;status&quot;: &quot;verified&quot;, &quot;code&quot;: null, &quot;reason&quot;: null, &quot;value&quot;: { &quot;account_number&quot;: &quot;92001091194&quot;, &quot;ifsc_code&quot;: &quot;UTIB0003093&quot;, &quot;account_type&quot;: &quot;nre_savings&quot;, &quot;bank_account_proof&quot;: &quot;file_e55ddbad95120si09153a7b1eb68fc01&quot; } } ], &quot;created_at&quot;: &quot;2025-08-05T18:30:11+0530&quot;, &quot;completed_at&quot;: &quot;2025-08-05T18:34:48+0530&quot;, &quot;updated_at&quot;: &quot;2025-08-05T18:34:48+0530&quot; }   ","version":"Next","tagName":"h2"},{"title":"Pre Verification Object parameters​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#pre-verification-object-parameters","content":" Attribute\tType\tRemarksobject\tstring\tValue will always be pre_verification. Objects of the same type share the same value id\tstring\tUnique identifier of the pre_verification object status\tstring\tIndicates the what status of pre verification 1. accepted: Pre verification request is accepted and is under progress 2. completed: Pre verification completed. You can refer to other attributes like readiness to know more about the result investor_identifier\tstring\tUnique identifier identifying the investor readiness\thash\tThe hash representing whether the investor is ready to invest in MF name\thash\tName of the investor pan\thash\tPan of the investor bank_accounts\tarray\tArray of bank accounts created_at\tstring\tPreverification creation timestamp completed_at\tstring\tIf preverification is completed, the completion timestamp. updated_at\tstring\tLast time when preverification was updated  ","version":"Next","tagName":"h2"},{"title":"Readiness hash​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#readiness-hash","content":" Attribute\tType\tRemarksstatus\tstring\t1. verified: Investor can proceed to invest 2.failed:Investor cannot invest. Please check code for more details on failure code\tstring\t1. kyc_unavailable: Investor cannot invest because KYC is unavailable 2.upstream_error: There was an error contacting upstream to check readiness 3.unknown: Investor is KYC Non compliant but the reason for non-compliance is not known reason\tstring\tDescriptive reason for the failure. Should be only relied for understanding the failure and not for programmatically interpreting the failure. For programmatic failure interpretation always use code  ","version":"Next","tagName":"h3"},{"title":"Bank Accounts hash​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#bank-accounts-hash","content":" Attribute\tType\tRemarksstatus\tstring\t1. verified: Investor can proceed to invest 2.failed:Investor cannot invest. Please check code for more details on failure code\tstring\t1.awaiting_approval_for_manual_verification_with_proof - This bank account needs a manual verification along with an associated bank account proof along with the approval for manual verification 2. bank_account_proof_required This bank account needs a manual verification and in order to initiate it, the bank account proof should be provided value.account_number\tstring\tBank account number value.ifsc_code\tstring\tIFSC code associated with the bank account value.account_type\tstring\tBank account type value.bank_account_proof\tstring\tFile ID of the bank account proof associated  ","version":"Next","tagName":"h3"},{"title":"Create Pre Verification API​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#create-pre-verification-api","content":" POST /poa/pre_verifications  This API lets you create a pre verification object.  curl --location '{{base_url}}/poa/pre_verifications' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;' \\ --data '{ &quot;investor_identifier&quot;: &quot;GYAPS3751D&quot;, &quot;pan&quot;: { &quot;value&quot;: &quot;GYAPS3751D&quot; }, &quot;name&quot;: { &quot;value&quot;: &quot;Seetharam S&quot; }, &quot;bank_accounts&quot;: [ { &quot;value&quot;: { &quot;account_number&quot;: &quot;92001091294&quot;, &quot;ifsc_code&quot;: &quot;UTIB0003093&quot;, &quot;account_type&quot;: &quot;nre_savings&quot;, &quot;bank_account_proof&quot;: &quot;file_e55ddbad95891ihdjh7b1eb68fc01&quot; }, &quot;verify_manually_if_required&quot;: true } ] }'   ","version":"Next","tagName":"h2"},{"title":"Request parameters​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#request-parameters","content":" Name\tMandatory\tType\tCommentsinvestor_identifier\tno\tstring\tInvestor identifier. Currently only PAN number of the investor is supported - Mandatory to check Readiness of the investor to invest pan.value\tno\thash\t- Mandatory if bank_accounts is present with one of the bank_account.account_type being savings or current - Optional if bank_accounts is present with one of the bank_account.account_type as nre_savings or nre_current name.value\tno\thash\t- Mandatory for bank account verification bank_accounts\tno\tarray\tArray of bank_account hashes - Mandatory for bank account verification  Bank account hash​  Name\tMandatory\tType\tCommentsvalue.account_number\tyes\tstring\tBank account number value.ifsc_code\tyes\tstring\tIFSC code linked with the bank account value.account_type\tyes\tstring\tBank account type. Supported values are - savings, current, nre_savings, nro_savings Note: This is case-sensitive value.bank_account_proof\tno\tstring\tFile ID of the associated bank account proof. Use POST /poa/files API to upload this file. - Mandatory if you want this bank account to be manually verified in case the bank account verification demands it - Optional if you don't want this bank account to be manually verified verify_manually_if_required\tno\tboolean\t- If true, then it means you are approving the pre_verification object to manually verify the bank account if the need arises - If false, then it means you don't want pre_verification object to automatically verify the bank account even though there is a need of it. In these cases, you can choose to collect a different bank account from the investor and attempt verification again  The pre_verification object will be returned as the response.  ","version":"Next","tagName":"h3"},{"title":"Note on NRI bank account verifications​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#note-on-nri-bank-account-verifications","content":" Currently, you can only attempt Pre Verification of nre_savings and nro_savings bank accountsAll the NRI bank accounts will be manually verified as of now  ","version":"Next","tagName":"h3"},{"title":"Note on Pre Verification object events​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#note-on-pre-verification-object-events","content":" Events are triggered upon status changes that happen on pre_verification object.Types of events - pre_verification.acceptedpre_verification.completed For more details, check Webhook notifications page.  ","version":"Next","tagName":"h3"},{"title":"Fetch Pre Verifications API​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#fetch-pre-verifications-api","content":" GET /poa/pre_verifications/:id  This API lets you fetch a pre verification object.  curl --location '{{base_url}}/poa/pre_verifications/:id' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;'   ","version":"Next","tagName":"h2"},{"title":"Query parameters​","type":1,"pageTitle":"Pre Verification API","url":"/pr-preview/pr-13/docs/additional-apis/pre-verification#query-parameters","content":" Name\tMandatory\tType\tCommentsid\tyes\tstring\tID of the pre_verification object  The pre_verification object will be returned as the response. ","version":"Next","tagName":"h3"},{"title":"Capabilities","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities","content":"","keywords":"","version":"Next"},{"title":"Available​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#available","content":" ","version":"Next","tagName":"h2"},{"title":"Investor Types​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#investor-types","content":" Resident Indian (Individual)  ","version":"Next","tagName":"h3"},{"title":"Transaction Types​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#transaction-types","content":" Lumpsum PurchaseSIP (monthly, daily) Ability to register a payment mandateAbility to pay for the first instalment immediately Redemption (by units, amount, redeem all)  ","version":"Next","tagName":"h3"},{"title":"Payment Options​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#payment-options","content":" UPI (auth: redirect url, collect flow, intent flow, QR code flow)NACH (auth: netbanking)UPI Autopay (auth: redirect url, collect flow, intent flow, QR code flow)Netbanking  ","version":"Next","tagName":"h3"},{"title":"Scheme Types​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#scheme-types","content":" Regular schemes (for ARN holders)Direct schemes (for RIAs)  ","version":"Next","tagName":"h3"},{"title":"Available Mutual Funds​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#available-mutual-funds","content":" Nippon India Mutual FundHDFC Mutual Fund360 ONE Mutual FundICICI Prudential Mutual FundAditya Birla Mutual FundAxis Mutual FundQuant Mutual FundUTI Mutual FundKotak Mutual FundDSP (Coming Soon)  ","version":"Next","tagName":"h3"},{"title":"Roadmap​","type":1,"pageTitle":"Capabilities","url":"/pr-preview/pr-13/docs/capabilities#roadmap","content":" UPI Autopay: Register mandate and debit first instalment in one attempt ","version":"Next","tagName":"h2"},{"title":"Cart Functionality (Lumpsum)","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities/cart-lumpsum","content":"Cart Functionality (Lumpsum) You can place a lumpsum purchase transaction in a set of schemes (belonging to same AMC or different AMCs) and collect a single payment. Except for a single payment, each purchase in the cart works the same way as a single lumpsum purchase with its own fulfillment lifecycle. For a cart of two schemes, the following combinations related to folios, are possible New folio + New folioNew folio + Existing folioExisting folio + Existing folio","keywords":"","version":"Next"},{"title":"Zero Touch Onboarding APIs","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding","content":"","keywords":"","version":"Next"},{"title":"Bank account lookup​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#bank-account-lookup","content":" The Bank account lookup API lets a partner fetch the bank account details of the investor that is registered against the primary VPA / UPI ID.  ","version":"Next","tagName":"h2"},{"title":"Bank account lookup object​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#bank-account-lookup-object","content":" { &quot;object&quot;: &quot;bank_account_lookup&quot;, &quot;id&quot;: &quot;bal_32PUeQZKweX8ZBSXY22Iqq9u3yg&quot;, &quot;status&quot;: &quot;success&quot;, &quot;source_ref_id&quot;: &quot;1a478f56-54df-41aa-951a-b2c7edbada2&quot;, &quot;mobile_number&quot;: &quot;9012390123&quot;, &quot;data&quot;: { &quot;account_holder_name&quot;: &quot;Rakshith Agarwal&quot;, &quot;account_number&quot;: &quot;98123108291821&quot;, &quot;ifsc_code&quot;: &quot;utib0003076&quot; } }   Attribute\tType\tCommentsobject\tstring\tValue is bank_account_lookup. String representing the object type. Objects of the same type share the same value id\tstring\tUnique identifier of the bank_account_lookup object status\tenum\tThe status of the bank_account_lookup object. Possible values are - pending, successful, failed source_ref_id\tstring\tA unique identifier that could be used as a an internal reference ID at the API request source mobile_number\tstring\tMobile number of the customer against which the bank account lookup was attempted  ","version":"Next","tagName":"h3"},{"title":"Create Bank Account Lookup​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#create-bank-account-lookup","content":" POST /v2/bank_account_lookups  This API lets you create a bank account lookup object.  curl --location '{{base_url}}/v2/bank_account_lookups' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;' \\ --data '{ &quot;mobile_number&quot;: &quot;9012390123&quot; } '   Request parameters​  Name\tMandatory\tType\tCommentsmobile_number\tyes\tstring\tCustomer's mobile number source_ref_id\tno\tstring\tA unique identifier that could be used as a an internal reference ID at the API request source. If something is passed here, the same value would be used in the object. If nothing is passed here, Cybrilla will assign a random generated identifier as the value  NOTE: The bank_account_lookup object will be returned as the response.  ","version":"Next","tagName":"h3"},{"title":"Fetch Bank Account Lookup​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#fetch-bank-account-lookup","content":" GET /v2/bank_account_lookups/:id  This API lets you fetch a bank account lookup object.  curl --location '{{base_url}}/v2/bank_account_lookups/:id' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;'   Query parameters​  Name\tMandatory\tType\tCommentsid\tyes\tstring\tID of the bank_account_lookup object  NOTE: The bank_account_lookup object will be returned as the response.      ","version":"Next","tagName":"h3"},{"title":"Customer Data Lookup API​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#customer-data-lookup-api","content":" The Customer data lookup API lets a partner fetch certain demographic information of the investor from certain third party sources.  ","version":"Next","tagName":"h2"},{"title":"Customer data lookup object​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#customer-data-lookup-object","content":" { &quot;object&quot;: &quot;customer_data_lookup&quot;, &quot;id&quot;: &quot;cdl_32PUk5aUMxb7pLGdEGsyk9cRF9t&quot;, &quot;status&quot;: &quot;success&quot;, &quot;source_ref_id&quot;: &quot;910563db-deb1-44b3-9e34-5819c396de54&quot;, &quot;mobile_number&quot;: &quot;9012390123&quot;, &quot;name&quot;: &quot;Rakshith&quot;, &quot;data&quot;: { &quot;name&quot;: &quot;Rakshith Agarwal&quot;, &quot;date_of_birth&quot;: &quot;1992-03-15&quot;, &quot;gender&quot;: &quot;male&quot;, &quot;pan&quot;: &quot;jsdpr9021f&quot;, &quot;aadhaar_number&quot;: null, &quot;income_slab&quot;: &quot;upto_1lakh&quot;, &quot;occupation&quot;: null, &quot;addresses&quot;: [ { &quot;line&quot;: &quot;123 36th cross 24th main jayanagar 4th t block bangalore south&quot;, &quot;state&quot;: &quot;karnataka&quot;, &quot;pincode&quot;: &quot;560041&quot;, &quot;reported_date&quot;: &quot;2025-08-31&quot; } ], &quot;email_addresses&quot;: [ { &quot;email&quot;: &quot;iamagarwalrakshith@gmail.com&quot;, &quot;reported_date&quot;: &quot;2025-06-30&quot; } ] } }   Attribute\tType\tCommentsobject\tstring\tValue is customer_data_lookup. String representing the object type. Objects of the same type share the same value id\tstring\tUnique identifier of the customer_data_lookup object status\tenum\tThe status of the customer_data_lookup object. Possible values are - pending, successful, failed source_ref_id\tstring\tA unique identifier that could be used as a an internal reference ID at the API request source mobile_number\tstring\tMobile number of the customer against which the data lookup was attempted name\tstring\tName of the customer data\thash\tHash containing all the data of the customer. The data would be available only for 30 minutes since customer_data_lookup.status was marked successful  data hash​  Attribute\tType\tCommentsname\tstring\tCustomer's name date_of_birth\tstring\tCustomer's date of birth gender\tenum\tCustomer's gender. Possible values are - male, female, transgender pan\tstring\tCustomer's PAN number aadhaar_number\tstring\tLast 4 digits of customer's Aadhaar number income_slab\tenum\tCustomer's income slab. Possible values are - upto_1lakh, above_1lakh_upto_5lakh, above_5lakh_upto_10lakh, above_10lakh_upto_25lakh, above_25lakh_upto_1cr, above_1cr occupation\tenum\tCustomer's occupation. Possible values are - business, professional, retired, house_wife, student, public_sector_service, private_sector_service, government_service, others, agriculture, doctor, forex_dealer, service addresses\tarray of address hashes\tList of customer's addresses email_addresses\tarray of email_address hashes\tList of customer's email addresses  address hash​  Attribute\tType\tCommentsline\tstring\tAddress line state\tstring\tState pincode\tstring\tPincode reported_date\tstring\tDate as on which this address was reported by the customer  email_address hash​  Attribute\tType\tCommentsemail\tstring\tEmail address of the customer reported_date\tstring\tDate as on which this email address was reported by the customer  ","version":"Next","tagName":"h3"},{"title":"Create Customer Data Lookup​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#create-customer-data-lookup","content":" POST /v2/customer_data_lookups  This API lets you create a customer data lookup object.  curl --location '{{base_url}}/v2/customer_data_lookups' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;' \\ --data '{ &quot;name&quot;: &quot;Rakshith&quot;, &quot;mobile_number&quot;: &quot;9012390123&quot; } '   Request parameters​  Name\tMandatory\tType\tCommentsname\tyes\tstring\tCustomer's name mobile_number\tyes\tstring\tCustomer's mobile number source_ref_id\tno\tstring\tA unique identifier that could be used as a an internal reference ID at the API request source. If something is passed here, the same value would be used in the object. If nothing is passed here, Cybrilla will assign a random generated identifier as the value  NOTE: The customer_data_lookup object will be returned as the response.  ","version":"Next","tagName":"h3"},{"title":"Fetch Customer Data Lookup​","type":1,"pageTitle":"Zero Touch Onboarding APIs","url":"/pr-preview/pr-13/docs/additional-apis/zero-touch-onboarding#fetch-customer-data-lookup","content":" GET /v2/customer_data_lookups/:id  This API lets you fetch a customer data lookup object.  curl --location '{{base_url}}/v2/customer_data_lookups/:id' \\ --header 'Content-Type: application/json' \\ --header 'Authorization: Bearer &lt;token&gt;'   Query parameters​  Name\tMandatory\tType\tCommentsid\tyes\tstring\tID of the customer_data_lookup object  NOTE: The customer_data_lookup object will be returned as the response.      NOTE: Both these APIs attempt to fetch data from third-party sources provided they are available. Once data is fetched, accuracy isn’t validated. We strongly advise you to share the information with the investor and proceed only after their approval. ","version":"Next","tagName":"h3"},{"title":"Cart Functionality (SIP)","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities/cart-sip","content":"Cart Functionality (SIP) Upcoming","keywords":"","version":"Next"},{"title":"Daily SIP","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities/sip-daily","content":"","keywords":"","version":"Next"},{"title":"Registration​","type":1,"pageTitle":"Daily SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-daily#registration","content":" T = day of registration T+2c = start of instalments  ","version":"Next","tagName":"h2"},{"title":"Debit Schedule​","type":1,"pageTitle":"Daily SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-daily#debit-schedule","content":" SIP debit happens on the following days:  Business Day Daily SIP: Mon, Tue, Wed, Thu, Fri (currently available) Calendar Day Daily SIP: Mon, Tue, Wed, Thu, Fri, Sat, Sun (Coming soon)  ","version":"Next","tagName":"h2"},{"title":"Process (w/ UPI Autopay)​","type":1,"pageTitle":"Daily SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-daily#process-w-upi-autopay","content":" T = day of sip instalment     on T-1c day: Notification about the next day debit will be sent to the investor by his bank, at around 5amon T day: Actual debit happens, at around 8amon T+1b day: Units are allotted on that day's NAVon T+1b+1c day: Unit allotment details are available. SMS notification is sent to the investor by the AMC.  ","version":"Next","tagName":"h3"},{"title":"Cancellation​","type":1,"pageTitle":"Daily SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-daily#cancellation","content":" You can cancel a SIP anytime when the fulfillment is in PENDING OR ONGOING states.  When cancelled  No future instalments will be generatedInstalments already generated but waiting for the payment debit - will have no impact (the debit will happen as per the schedule)Instalments already generated and payment debit happened - will have no impact (units will be allotted after processing)  ","version":"Next","tagName":"h2"},{"title":"API​","type":1,"pageTitle":"Daily SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-daily#api","content":" In the on_search callback, scheme plans supporting daily sip will have a fulfillment of type = SIP and THRESHOLDS.FREQUENCY tag = P1D.  While making a select call, use that fulfillment id and provide the schedule as shown in the example below.  &quot;fulfillments&quot;: [ { &quot;id&quot;: &quot;34002&quot;, // ... other attributes &quot;stops&quot;: [ { &quot;time&quot;: { &quot;schedule&quot;: { &quot;frequency&quot;: &quot;R6/2025-05-15/P1D&quot; // 6 instalments, starting 15th May } } } ] } ]  ","version":"Next","tagName":"h2"},{"title":"Monthly SIP","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly","content":"","keywords":"","version":"Next"},{"title":"Registration​","type":1,"pageTitle":"Monthly SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly#registration","content":" T = day of registration  While registering a monthly SIP, you need to provide the following inputs:  First instalment date. It has to be any day on or after T + 2c. The date should be among the allowed monthly dates for the scheme chosen.Number of instalments. min/max?  ","version":"Next","tagName":"h2"},{"title":"Debit Schedule​","type":1,"pageTitle":"Monthly SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly#debit-schedule","content":" SIP debit happens on the instalment day, every month as per the provided schedule. If for some reason, POA is not able to debit on the instalment day, it attempts to debit on the following day. Debit will never be attempted before the instalment day. Even if the instalment day is a market holiday, the debit will still happen.  ","version":"Next","tagName":"h2"},{"title":"Process​","type":1,"pageTitle":"Monthly SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly#process","content":" T = day of sip instalment  UPI AutopayNACH Mandate on T-1c day: Notification about the next day debit will be sent to the investor by his bank, at around 5amon T day: Actual debit happens, at around 8amon T+1b day: Units are allotted on that day's NAVon T+1b+1c day: Unit allotment details are available. SMS notification is sent to the investor by the AMC.  ","version":"Next","tagName":"h3"},{"title":"Cancellation​","type":1,"pageTitle":"Monthly SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly#cancellation","content":" You can cancel a SIP anytime when the fulfillment is in PENDING OR ONGOING states.  When cancelled  No future instalments will be generatedInstalments already generated but waiting for the payment debit - will have no impact (the debit will happen as per the schedule)Instalments already generated and payment debit happened - will have no impact (units will be allotted after processing)  ","version":"Next","tagName":"h2"},{"title":"API​","type":1,"pageTitle":"Monthly SIP","url":"/pr-preview/pr-13/docs/capabilities/sip-monthly#api","content":" In the on_search callback, scheme plans supporting monthly sip will have a fulfillment of type = SIP and THRESHOLDS.FREQUENCY tag = P1M.  While making a select call, use that fulfillment id and provide the schedule as shown in the example below.  &quot;fulfillments&quot;: [ { &quot;id&quot;: &quot;34023&quot;, // ... other attributes &quot;stops&quot;: [ { &quot;time&quot;: { &quot;schedule&quot;: { &quot;frequency&quot;: &quot;R6/2025-05-15/P1M&quot; // 6 instalments, starting 15th May and recurring every month on 15th } } } ] } ]  ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/getting-started","content":"","keywords":"","version":"Next"},{"title":"Sandbox​","type":1,"pageTitle":"Getting Started","url":"/pr-preview/pr-13/docs/getting-started#sandbox","content":" Signup with ONDC Setup the portalSubscribe to Pre-Prod Registry (Details here) Signup with Cybrilla POA Fill up Service Enablement Form Call /search apiMake the first transaction  ","version":"Next","tagName":"h2"},{"title":"Production​","type":1,"pageTitle":"Getting Started","url":"/pr-preview/pr-13/docs/getting-started#production","content":" Signup with ONDC Setup the portalSign the Network Participant AgreementSubscribe to Prod Registry (Details here) Empanel with the AMCsSignup with Cybrilla POA Sign the Partner Services AgreementFill up Service Enablement FormSubmit compliance evidences/ declarations Call /search apiMake the first transaction ","version":"Next","tagName":"h2"},{"title":"Cybrilla POA","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/introduction","content":"Cybrilla POA POA = Point of Acceptance Think of POA as a digital branch, acting on behalf of the AMCs, to accept applications related to MF transactions. The applications are accepted from Mutual Fund Distributors (having ARN license or RIA license). To submit applications, you can integrate POA APIs directly or use any of our authorized partners - Fintech Primitives. POA APIs use ONDC MF Specifications. The APIs are asynchronous in nature, which means POA accepts the request (action call), sends an acknowledgement (ACK) and later respond back with the result of the request (on_action callback).","keywords":"","version":"Next"},{"title":"Schema","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema","content":"Schema The json structure in every action call and on_action callback consists of various objects representing different elements of a mutual fund transaction. The following sections detail out each object.","keywords":"","version":"Next"},{"title":"UPI Autopay","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/capabilities/upi-autopay","content":"","keywords":"","version":"Next"},{"title":"Intent/ QR Flow​","type":1,"pageTitle":"UPI Autopay","url":"/pr-preview/pr-13/docs/capabilities/upi-autopay#intent-qr-flow","content":" When URI is selected as AUTH, POA sends the upi uri in the payment url attribute. You can use this uri to generate a QR code in the web browser or open a upi app in the investor's mobile phone.    ","version":"Next","tagName":"h2"},{"title":"Collect Flow​","type":1,"pageTitle":"UPI Autopay","url":"/pr-preview/pr-13/docs/capabilities/upi-autopay#collect-flow","content":" For collect flow, POA sends a collect request to the investor's upi vpa and waits for the investor to complete the payment. After the payment is complete, POA will send you an on_status callback with the update status of the payment.    ","version":"Next","tagName":"h2"},{"title":"Autopay Limit​","type":1,"pageTitle":"UPI Autopay","url":"/pr-preview/pr-13/docs/capabilities/upi-autopay#autopay-limit","content":" In the on_select callback, POA sends the default mandate limit as part of payment object's tag PAYMENT_METHOD.MANDATE_LIMIT. You can send a different limit by updating the tag value in the init call. The value must be less than 100000. ","version":"Next","tagName":"h2"},{"title":"Context","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/context","content":"Context Context contains an overview of the message being sent in the api call. Think of this as an equivalent to http headers. { // Currently dealing only with INDIA, so hardcode the location &quot;location&quot;: { &quot;country&quot;: { &quot;code&quot;: &quot;IND&quot; }, &quot;city&quot;: { &quot;code&quot;: &quot;*&quot; } }, // FIS14 is for investments &quot;domain&quot;: &quot;ONDC:FIS14&quot;, // Time of the request generation // RFC3339 format &quot;timestamp&quot;: &quot;2025-05-25T05:23:03.443Z&quot;, // Distributor identifier in a fully qualified domain name (FQDN) format &quot;bap_id&quot;: &quot;api.buyerapp.com&quot;, // Distributor callback URL. Should contain the domain name used in the identifier &quot;bap_uri&quot;: &quot;https://api.buyerapp.com/ondc&quot;, // POA identifier in a fully qualified domain name (FQDN) format &quot;bpp_id&quot;: &quot;api.cybrilla.com&quot;, // POA callback URL. Should contain the domain name used in the identifier &quot;bpp_uri&quot;: &quot;https://api.cybrilla.com/ondc&quot;, // A correlation id to match multiple requests in a particular user session (eg. all messages from `select` to `confirm` calls) // Buyer app should generate a new transaction id for every new user session/transaction. // UUID format &quot;transaction_id&quot;: &quot;a9aaecca-10b7-4d19-b640-b047a7c62196&quot;, // A correlation id to match the `action` call and `on_action` callback // Buyer app should generate a new message id for every `action` call it is making. POA will use the same message id for the corresponding `on_action` callback. // For unsolicited `on_action` callbacks, POA will generate a new message id everytime. // UUID format &quot;message_id&quot;: &quot;bb579fb8-cb82-4824-be12-fcbc405b6608&quot;, // Version of the protocol &quot;version&quot;: &quot;2.1.0&quot;, // The duration from `timestamp` for which this message holds valid. Buyer app can set this value during `action` calls as an expectation to receive the corresponding `on_action` callback within this duration. If the `on_action` callback comes after this duration, buyer app can either choose to accept it or reject it // POA will send a NACK if it cannot adhere to this ttl expectation // ISO8601 format &quot;ttl&quot;: &quot;PT10M&quot;, // Protocol method &quot;action&quot;: &quot;confirm&quot; } ","keywords":"","version":"Next"},{"title":"Order","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/order","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Order","url":"/pr-preview/pr-13/docs/schema/order#states","content":" For order states refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/release-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"},{"title":"Quote","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/quote","content":"Quote Contains details about total transaction value and the breakup (eg. stamp_duty) { // ID of the quote object, set by the POA &quot;id&quot;: &quot;q1&quot;, // Represents the total money movement. // Purchase value for purchase transaction, Redemption payout for redemption transaction &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;3000&quot; }, // Contains details about stamp duty, STT etc., relevant to the transaction &quot;breakup&quot;: [ { &quot;item&quot;: { &quot;id&quot;: &quot;12391&quot;, &quot;fulfillment_ids&quot;: [&quot;ff_008&quot;] }, &quot;title&quot;: &quot;INVESTMENT&quot;, &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;2999.85&quot; } }, { &quot;item&quot;: { &quot;id&quot;: &quot;12391&quot;, &quot;fulfillment_ids&quot;: [&quot;ff_008&quot;] }, &quot;title&quot;: &quot;STAMP_DUTY&quot;, &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;0.15&quot; } } ] } ","keywords":"","version":"Next"},{"title":"Support","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/support","content":"","keywords":"","version":"Next"},{"title":"Integration Support​","type":1,"pageTitle":"Support","url":"/pr-preview/pr-13/docs/support#integration-support","content":" Email: poa.support@cybrilla.com Monday to Friday, 9AM – 6PM IST (excluding market holidays) ","version":"Next","tagName":"h3"},{"title":"Item","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/item","content":"Item Represents a scheme and a scheme plan { // ID of the scheme plan as represented in the `on_search` callback &quot;id&quot;: &quot;12391&quot;, // ID of the scheme as represented in the `on_search` callback &quot;parent_item_id&quot;: &quot;138&quot;, // Name of the scheme plan // Code represent whether this item is a `SCHEME` or a `SCHEME_PLAN` &quot;descriptor&quot;: {&quot;name&quot;: &quot;ABC Mid Cap Fund - Regular - Growth&quot;, &quot;code&quot;: &quot;SCHEME_PLAN&quot;}, // Name of the Mutual Fund &quot;creator&quot;: {&quot;descriptor&quot;: {&quot;name&quot;: &quot;ABC Mutual Fund&quot;}}, // `selected` - Represents the order amount/units chosen by the investor. // `allocated` - Represents the actual units issued (for purchases), units redeemed (for redemptions/switches) // INR represent amount, MF_UNITS represent units &quot;quantity&quot;: { &quot;selected&quot;: { &quot;measure&quot;: { &quot;value&quot;: &quot;3000&quot;, &quot;unit&quot;: &quot;INR&quot; // can be `INR`, `MF_UNITS` } }, &quot;allocated&quot;: { &quot;measure&quot;: { &quot;value&quot;: &quot;149.9925&quot;, &quot;unit&quot;: &quot;MF_UNITS&quot; // can only be `MF_UNITS` } } }, // ID of the corresponding fulfillment object &quot;fulfillment_ids&quot;: [&quot;ff_789&quot;], // ID of the corresponding payment object &quot;payment_ids&quot;: [&quot;pmt_123&quot;], // Price at which the order is processed. `listed_value` represent the NAV. `value` represent the actual price. &quot;price&quot;: { &quot;currency&quot;: &quot;INR&quot;, &quot;value&quot;: &quot;20.0000&quot;, &quot;listed_value&quot;: &quot;20.2500&quot; }, // Date on which the order is processed. &quot;time&quot;: { &quot;label&quot;: &quot;NAV Date&quot;, &quot;timestamp&quot;: &quot;2024-07-23T00:00:00+05:30&quot; }, // Represent additional details about the scheme plan &quot;tags&quot;: [ { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Information&quot;, &quot;code&quot;: &quot;PLAN_INFORMATION&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Consumer Terms &amp; Conditions&quot;, &quot;code&quot;: &quot;CONSUMER_TNC&quot;}, &quot;value&quot;: &quot;https://sellerapp.com/legal/ondc:fis14/consumer_tnc.html&quot; } ] }, { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Identifiers&quot;, &quot;code&quot;: &quot;PLAN_IDENTIFIERS&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;ISIN&quot;, &quot;code&quot;: &quot;ISIN&quot;}, &quot;value&quot;: &quot;IN123214324&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;RTA Identifier&quot;, &quot;code&quot;: &quot;RTA_IDENTIFIER&quot;}, &quot;value&quot;: &quot;02BZ&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;AMFI Identifier&quot;, &quot;code&quot;: &quot;AMFI_IDENTIFIER&quot;}, &quot;value&quot;: &quot;125487&quot; } ] }, { &quot;display&quot;: true, &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan Options&quot;, &quot;code&quot;: &quot;PLAN_OPTIONS&quot;}, &quot;list&quot;: [ { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Plan&quot;, &quot;code&quot;: &quot;PLAN&quot;}, &quot;value&quot;: &quot;REGULAR&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;Option&quot;, &quot;code&quot;: &quot;OPTION&quot;}, &quot;value&quot;: &quot;IDCW&quot; }, { &quot;descriptor&quot;: {&quot;name&quot;: &quot;IDCW Option&quot;, &quot;code&quot;: &quot;IDCW_OPTION&quot;}, &quot;value&quot;: &quot;PAYOUT&quot; } ] } ] } ","keywords":"","version":"Next"},{"title":"Payment","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/payment","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Payment","url":"/pr-preview/pr-13/docs/schema/payment#states","content":" For available payment methods and state flow refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/release-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"},{"title":"Fulfillment","type":0,"sectionRef":"#","url":"/pr-preview/pr-13/docs/schema/fulfillment","content":"","keywords":"","version":"Next"},{"title":"States​","type":1,"pageTitle":"Fulfillment","url":"/pr-preview/pr-13/docs/schema/fulfillment#states","content":" For state flow refer: https://github.com/ONDC-Official/ONDC-FIS-Specifications/blob/release-FIS14-2.1.0/api/components/docs/lifecycle-and-states.md#fulfillment ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}